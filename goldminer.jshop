;#########################################
;# Gold Miner
;#########################################
;# MauMagnaguagno
;#########################################

(defdomain goldminer (
  ;=============================
  ; MOVE
  ;=============================
  (:operator (!move ?agent ?from ?to)
    (
      (at ?agent ?from)
      (adjacent ?from ?to)
      (not (blocked ?to))
    )
    ((at ?agent ?from))
    ((at ?agent ?to))
  )

  ;=============================
  ; PICK
  ;=============================
  (:operator (!pick ?agent ?gold ?where)
    (
      (at ?agent ?where)
      (on ?gold ?where)
    )
    ((on ?gold ?where))
    ((has ?agent ?gold))
  )

  ;=============================
  ; DROP
  ;=============================
  (:operator (!drop ?agent ?gold ?where)
    ((at ?agent ?where))
    ((has ?agent ?gold))
    ((on ?gold ?where))
  )

  ;=============================
  ; VISIT
  ;=============================
  (:operator (!!visit ?agent ?pos)
    nil
    nil
    ((visited ?agent ?pos))
  )

  ;=============================
  ; UNVISIT
  ;=============================
  (:operator (!!unvisit ?agent ?pos)
    nil
    ((visited ?agent ?pos))
    nil
  )

  ;=============================
  ; SEE
  ;=============================
  (:operator (!see ?gold)
    nil
    nil
    ((dibs ?gold))
  )

  ;=============================
  ; SHIFT
  ;=============================
  (:operator (!shift ?agent)
    ((next ?agent ?other))
    ((duty ?agent))
    ((duty ?other))
  )

  ;=============================
  ; TRAVEL
  ;=============================
  (:method (travel ?agent ?to)
    ;-----------------------------
    travel_impossible
    ;-----------------------------
    ((blocked ?to))
    nil
    ;-----------------------------
    travel_base
    ;-----------------------------
    ((at ?agent ?to))
    nil
    ;-----------------------------
    travel_rail
    ;-----------------------------
    (
      (not (at ?agent ?to))
      (at ?agent ?from)
      (rail ?from ?place)
      (not (blocked ?place))
      (not (visited ?agent ?place))
    )
    (
      (!move ?agent ?from ?place)
      (!!visit ?agent ?from)
      (travel ?agent ?to)
      (!!unvisit ?agent ?from)
    )
    ;-----------------------------
    travel_recursion
    ;-----------------------------
    (
      (not (at ?agent ?to))
      (at ?agent ?from)
      (adjacent ?from ?place)
      (not (rail ?from ?place))
      (not (blocked ?place))
      (not (visited ?agent ?place))
    )
    (
      (!move ?agent ?from ?place)
      (!!visit ?agent ?from)
      (travel ?agent ?to)
      (!!unvisit ?agent ?from)
    )
  )

  ;=============================
  ; GET_GOLD
  ;=============================
  (:method (get_gold)
    ;-----------------------------
    get_gold_recursion
    ;-----------------------------
    (
      (duty ?agent)
      (at ?agent ?agent_pos)
      (on ?gold ?gold_pos)
      (not (has ?agent ?anygold))
      (not (dibs ?gold))
      (deposit ?deposit_pos)
    )
    (
      (!see ?gold)
      (travel ?agent ?gold_pos)
      (!pick ?agent ?gold ?gold_pos)
      (travel ?agent ?deposit_pos)
      (!drop ?agent ?gold ?deposit_pos)
      (!shift ?agent)
      (get_gold)
    )
    ;-----------------------------
    get_gold_base
    ;-----------------------------
    nil
    nil
  )
))