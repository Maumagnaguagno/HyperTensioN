require './tests/hypest'

class Graph < Test::Unit::TestCase
  include Hypest

  def test_basic_pb1_jshop_parsing_compile_to_dot
    compiler_tests(
      # Files
      'examples/basic/basic.jshop',
      'examples/basic/pb1.jshop',
      # Parser, extensions and output
      JSHOP_Parser, [], 'dot',
      # Domain
'// Generated by Hype
digraph "basic" {
  nodesep=1.0
  ranksep=1.0
  // Operators
  "pickup" [
    shape=record
    label="{{pickup|?a}|{|(have ?a)\\l}}"
  ]
  "drop" [
    shape=record
    label="{{drop|?a}|{(have ?a)\\l|not (have ?a)\\l}}"
  ]
  // Methods
  "swap" [
    shape=Mrecord
    style=bold
    label="{{swap|?x ?y}|{<n0>swap_case_0|<n1>swap_case_1}}"
  ]
  "label_swap_case_0" [
    shape=Mrecord
    label="{{swap_case_0|}|(have ?x)\\lnot (have ?y)\\l|<n0>drop ?x|<n1>pickup ?y}"
  ]
  "swap":n0 -> "label_swap_case_0" [style=dotted]
  "label_swap_case_0":n0 -> "drop"
  "label_swap_case_0":n1 -> "pickup"
  "label_swap_case_1" [
    shape=Mrecord
    label="{{swap_case_1|}|(have ?y)\\lnot (have ?x)\\l|<n0>drop ?y|<n1>pickup ?x}"
  ]
  "swap":n1 -> "label_swap_case_1" [style=dotted]
  "label_swap_case_1":n0 -> "drop"
  "label_swap_case_1":n1 -> "pickup"
}',
      # Problem
      nil
    )
  end
end